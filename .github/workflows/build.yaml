# Build and test myvault using python, pytest, rust, wasm-pack,
# clippy, jshint, jddocs, headless chrome browser, pandoc, artifact uploads
# and other stuff.
#
# It was tested locally using act: https://github.com/nektos/act.
# To get it to work i had to manually comment out the artifact upload.
name: build-and-test

on:
  push:
    branches:
      - main
    pull_request:
      - main
  workflow_dispatch:

jobs:
  build:
    # Allow more than 1 one os in the future.
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v2

      - run: sudo apt update

      - run: sudo apt install -y zip unzip curl wget gdebi-core curl wget gdebi-core git

      - name: 'Setup Python 3.9'
        uses: actions/setup-python@v2
        with:
          # Semantic version range syntax or exact version of a Python
          # version.
          python-version: '3.9'

      - run: pip install pipenv

      - run: pipenv install --deploy

      - run: sudo apt install -y libappindicator1 fonts-liberation

      - run: sudo apt install -y chromium-chromedriver

      - name: 'Install chromedriver'
        run: |
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo gdebi -n google-chrome-stable_current_amd64.deb

      # Note: originally failed with google-chrome not found.
      - uses: nanasess/setup-chromedriver@master

      - run: google-chrome --version

      - name: 'Install rust'
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: 'Install wasm-pack'
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | bash -s -- --mode no-prompt

      - name: 'Install node'
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - run: npm install

      - run: npm install -g jshint

      - run: npm install -g jsdoc

      - run: sudo apt install -y pandoc

      - run: make build

      - run: make test

      # make the webapp.tar artifact: webapp.tar.
      - run: make webapp

      # upload the artifact to the github action artifact location.
      # to download the artifact from the command line
      # 1. list all artifacts"
      #    curl -H 'Accept: application/vnd.github.v3+json' https://api.github.com/repos/jlinoff/myvault/actions/artifacts
      # 2. choose the one that you want (for this example '75537995'
      # 3. download the artifact (note that you need valid access credentials):
      #    curl -u jlinoff -L https://api.github.com/repos/jlinoff/myvault/actions/artifacts/75537995/zip -o artifact.zip
      # 4. view the contents:
      #    unzip -l artifact.zip
      - name: 'upload webapp'
        uses: actions/upload-artifact@v2
        with:
          name: webapp
          path: webapp.tar
          retention-days: 30
          # Maximum is 90 days for public repos
